> show dbs
admin             0.000GB
config            0.000GB
local             0.000GB
mongodb_practice  0.000GB
population        0.002GB
restaurants       0.001GB
> use restaurants
switched to db restaurants
> show collections
addresses

Q 1)Write a MongoDB query to display all the documents in the collection restaurants.

> db.addresses.find()
{ "_id" : ObjectId("60771a0ac4a88d16ac71710e"), "address" : { "building" : "1007", "coord" : [ -73.856077, 40.848447 ], "street" : "Morris Park Ave", "zipcode" : "10462" }, "borough" : "Bronx", "cuisine" : "Bakery", "grades" : [ { "date" : ISODate("2014-03-03T00:00:00Z"), "grade" : "A", "score" : 2 }, { "date" : ISODate("2013-09-11T00:00:00Z"), "grade" : "A", "score" : 6 }, { "date" : ISODate("2013-01-24T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2011-11-23T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2011-03-10T00:00:00Z"), "grade" : "B", "score" : 14 } ], "name" : "Morris Park Bake Shop", "restaurant_id" : "30075445" }
{ "_id" : ObjectId("60771a0ac4a88d16ac71710f"), "address" : { "building" : "469", "coord" : [ -73.961704, 40.662942 ], "street" : "Flatbush Avenue", "zipcode" : "11225" }, "borough" : "Brooklyn", "cuisine" : "Hamburgers", "grades" : [ { "date" : ISODate("2014-12-30T00:00:00Z"), "grade" : "A", "score" : 8 }, { "date" : ISODate("2014-07-01T00:00:00Z"), "grade" : "B", "score" : 23 }, { "date" : ISODate("2013-04-30T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2012-05-08T00:00:00Z"), "grade" : "A", "score" : 12 } ], "name" : "Wendy'S", "restaurant_id" : "30112340" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717110"), "address" : { "building" : "351", "coord" : [ -73.98513559999999, 40.7676919 ], "street" : "West   57 Street", "zipcode" : "10019" }, "borough" : "Manhattan", "cuisine" : "Irish", "grades" : [ { "date" : ISODate("2014-09-06T00:00:00Z"), "grade" : "A", "score" : 2 }, { "date" : ISODate("2013-07-22T00:00:00Z"), "grade" : "A", "score" : 11 }, { "date" : ISODate("2012-07-31T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2011-12-29T00:00:00Z"), "grade" : "A", "score" : 12 } ], "name" : "Dj Reynolds Pub And Restaurant", "restaurant_id" : "30191841" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717111"), "address" : { "building" : "2780", "coord" : [ -73.98241999999999, 40.579505 ], "street" : "Stillwell Avenue", "zipcode" : "11224" }, "borough" : "Brooklyn", "cuisine" : "American ", "grades" : [ { "date" : ISODate("2014-06-10T00:00:00Z"), "grade" : "A", "score" : 5 }, { "date" : ISODate("2013-06-05T00:00:00Z"), "grade" : "A", "score" : 7 }, { "date" : ISODate("2012-04-13T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2011-10-12T00:00:00Z"), "grade" : "A", "score" : 12 } ], "name" : "Riviera Caterer", "restaurant_id" : "40356018" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717112"), "address" : { "building" : "97-22", "coord" : [ -73.8601152, 40.7311739 ], "street" : "63 Road", "zipcode" : "11374" }, "borough" : "Queens", "cuisine" : "Jewish/Kosher", "grades" : [ { "date" : ISODate("2014-11-24T00:00:00Z"), "grade" : "Z", "score" : 20 }, { "date" : ISODate("2013-01-17T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2012-08-02T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2011-12-15T00:00:00Z"), "grade" : "B", "score" : 25 } ], "name" : "Tov Kosher Kitchen", "restaurant_id" : "40356068" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717113"), "address" : { "building" : "8825", "coord" : [ -73.8803827, 40.7643124 ], "street" : "Astoria Boulevard", "zipcode" : "11369" }, "borough" : "Queens", "cuisine" : "American ", "grades" : [ { "date" : ISODate("2014-11-15T00:00:00Z"), "grade" : "Z", "score" : 38 }, { "date" : ISODate("2014-05-02T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2013-03-02T00:00:00Z"), "grade" : "A", "score" : 7 }, { "date" : ISODate("2012-02-10T00:00:00Z"), "grade" : "A", "score" : 13 } ], "name" : "Brunos On The Boulevard", "restaurant_id" : "40356151" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717114"), "address" : { "building" : "2206", "coord" : [ -74.1377286, 40.6119572 ], "street" : "Victory Boulevard", "zipcode" : "10314" }, "borough" : "Staten Island", "cuisine" : "Jewish/Kosher", "grades" : [ { "date" : ISODate("2014-10-06T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2014-05-20T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2013-04-04T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2012-01-24T00:00:00Z"), "grade" : "A", "score" : 9 } ], "name" : "Kosher Island", "restaurant_id" : "40356442" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717115"), "address" : { "building" : "7114", "coord" : [ -73.9068506, 40.6199034 ], "street" : "Avenue U", "zipcode" : "11234" }, "borough" : "Brooklyn", "cuisine" : "Delicatessen", "grades" : [ { "date" : ISODate("2014-05-29T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2014-01-14T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2013-08-03T00:00:00Z"), "grade" : "A", "score" : 8 }, { "date" : ISODate("2012-07-18T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2012-03-09T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2011-10-14T00:00:00Z"), "grade" : "A", "score" : 9 } ], "name" : "Wilken'S Fine Food", "restaurant_id" : "40356483" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717116"), "address" : { "building" : "6409", "coord" : [ -74.00528899999999, 40.628886 ], "street" : "11 Avenue", "zipcode" : "11219" }, "borough" : "Brooklyn", "cuisine" : "American ", "grades" : [ { "date" : ISODate("2014-07-18T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2013-07-30T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2013-02-13T00:00:00Z"), "grade" : "A", "score" : 11 }, { "date" : ISODate("2012-08-16T00:00:00Z"), "grade" : "A", "score" : 2 }, { "date" : ISODate("2011-08-17T00:00:00Z"), "grade" : "A", "score" : 11 } ], "name" : "Regina Caterers", "restaurant_id" : "40356649" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717117"), "address" : { "building" : "1839", "coord" : [ -73.9482609, 40.6408271 ], "street" : "Nostrand Avenue", "zipcode" : "11226" }, "borough" : "Brooklyn", "cuisine" : "Ice Cream, Gelato, Yogurt, Ices", "grades" : [ { "date" : ISODate("2014-07-14T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2013-07-10T00:00:00Z"), "grade" : "A", "score" : 8 }, { "date" : ISODate("2012-07-11T00:00:00Z"), "grade" : "A", "score" : 5 }, { "date" : ISODate("2012-02-23T00:00:00Z"), "grade" : "A", "score" : 8 } ], "name" : "Taste The Tropics Ice Cream", "restaurant_id" : "40356731" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717118"), "address" : { "building" : "2300", "coord" : [ -73.8786113, 40.8502883 ], "street" : "Southern Boulevard", "zipcode" : "10460" }, "borough" : "Bronx", "cuisine" : "American ", "grades" : [ { "date" : ISODate("2014-05-28T00:00:00Z"), "grade" : "A", "score" : 11 }, { "date" : ISODate("2013-06-19T00:00:00Z"), "grade" : "A", "score" : 4 }, { "date" : ISODate("2012-06-15T00:00:00Z"), "grade" : "A", "score" : 3 } ], "name" : "Wild Asia", "restaurant_id" : "40357217" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717119"), "address" : { "building" : "7715", "coord" : [ -73.9973325, 40.61174889999999 ], "street" : "18 Avenue", "zipcode" : "11214" }, "borough" : "Brooklyn", "cuisine" : "American ", "grades" : [ { "date" : ISODate("2014-04-16T00:00:00Z"), "grade" : "A", "score" : 5 }, { "date" : ISODate("2013-04-23T00:00:00Z"), "grade" : "A", "score" : 2 }, { "date" : ISODate("2012-04-24T00:00:00Z"), "grade" : "A", "score" : 5 }, { "date" : ISODate("2011-12-16T00:00:00Z"), "grade" : "A", "score" : 2 } ], "name" : "C & C Catering Service", "restaurant_id" : "40357437" }
{ "_id" : ObjectId("60771a0ac4a88d16ac71711a"), "address" : { "building" : "1269", "coord" : [ -73.871194, 40.6730975 ], "street" : "Sutter Avenue", "zipcode" : "11208" }, "borough" : "Brooklyn", "cuisine" : "Chinese", "grades" : [ { "date" : ISODate("2014-09-16T00:00:00Z"), "grade" : "B", "score" : 21 }, { "date" : ISODate("2013-08-28T00:00:00Z"), "grade" : "A", "score" : 7 }, { "date" : ISODate("2013-04-02T00:00:00Z"), "grade" : "C", "score" : 56 }, { "date" : ISODate("2012-08-15T00:00:00Z"), "grade" : "B", "score" : 27 }, { "date" : ISODate("2012-03-28T00:00:00Z"), "grade" : "B", "score" : 27 } ], "name" : "May May Kitchen", "restaurant_id" : "40358429" }
{ "_id" : ObjectId("60771a0ac4a88d16ac71711b"), "address" : { "building" : "1", "coord" : [ -73.96926909999999, 40.7685235 ], "street" : "East   66 Street", "zipcode" : "10065" }, "borough" : "Manhattan", "cuisine" : "American ", "grades" : [ { "date" : ISODate("2014-05-07T00:00:00Z"), "grade" : "A", "score" : 3 }, { "date" : ISODate("2013-05-03T00:00:00Z"), "grade" : "A", "score" : 4 }, { "date" : ISODate("2012-04-30T00:00:00Z"), "grade" : "A", "score" : 6 }, { "date" : ISODate("2011-12-27T00:00:00Z"), "grade" : "A", "score" : 0 } ], "name" : "1 East 66Th Street Kitchen", "restaurant_id" : "40359480" }
{ "_id" : ObjectId("60771a0ac4a88d16ac71711c"), "address" : { "building" : "705", "coord" : [ -73.9653967, 40.6064339 ], "street" : "Kings Highway", "zipcode" : "11223" }, "borough" : "Brooklyn", "cuisine" : "Jewish/Kosher", "grades" : [ { "date" : ISODate("2014-11-10T00:00:00Z"), "grade" : "A", "score" : 11 }, { "date" : ISODate("2013-10-10T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2012-10-04T00:00:00Z"), "grade" : "A", "score" : 7 }, { "date" : ISODate("2012-05-21T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2011-12-30T00:00:00Z"), "grade" : "B", "score" : 19 } ], "name" : "Seuda Foods", "restaurant_id" : "40360045" }
{ "_id" : ObjectId("60771a0ac4a88d16ac71711d"), "address" : { "building" : "203", "coord" : [ -73.97822040000001, 40.6435254 ], "street" : "Church Avenue", "zipcode" : "11218" }, "borough" : "Brooklyn", "cuisine" : "Ice Cream, Gelato, Yogurt, Ices", "grades" : [ { "date" : ISODate("2014-02-10T00:00:00Z"), "grade" : "A", "score" : 2 }, { "date" : ISODate("2013-01-02T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2012-01-09T00:00:00Z"), "grade" : "A", "score" : 3 }, { "date" : ISODate("2011-11-07T00:00:00Z"), "grade" : "P", "score" : 12 }, { "date" : ISODate("2011-07-21T00:00:00Z"), "grade" : "A", "score" : 13 } ], "name" : "Carvel Ice Cream", "restaurant_id" : "40360076" }
{ "_id" : ObjectId("60771a0ac4a88d16ac71711e"), "address" : { "building" : "265-15", "coord" : [ -73.7032601, 40.7386417 ], "street" : "Hillside Avenue", "zipcode" : "11004" }, "borough" : "Queens", "cuisine" : "Ice Cream, Gelato, Yogurt, Ices", "grades" : [ { "date" : ISODate("2014-10-28T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2013-09-18T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2012-09-20T00:00:00Z"), "grade" : "A", "score" : 13 } ], "name" : "Carvel Ice Cream", "restaurant_id" : "40361322" }
{ "_id" : ObjectId("60771a0ac4a88d16ac71711f"), "address" : { "building" : "6909", "coord" : [ -74.0259567, 40.6353674 ], "street" : "3 Avenue", "zipcode" : "11209" }, "borough" : "Brooklyn", "cuisine" : "Delicatessen", "grades" : [ { "date" : ISODate("2014-08-21T00:00:00Z"), "grade" : "A", "score" : 4 }, { "date" : ISODate("2014-03-05T00:00:00Z"), "grade" : "A", "score" : 3 }, { "date" : ISODate("2013-01-10T00:00:00Z"), "grade" : "A", "score" : 10 } ], "name" : "Nordic Delicacies", "restaurant_id" : "40361390" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717120"), "address" : { "building" : "522", "coord" : [ -73.95171, 40.767461 ], "street" : "East   74 Street", "zipcode" : "10021" }, "borough" : "Manhattan", "cuisine" : "American ", "grades" : [ { "date" : ISODate("2014-09-02T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2013-12-19T00:00:00Z"), "grade" : "B", "score" : 16 }, { "date" : ISODate("2013-05-28T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2012-12-07T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2012-03-29T00:00:00Z"), "grade" : "A", "score" : 11 } ], "name" : "Glorious Food", "restaurant_id" : "40361521" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717121"), "address" : { "building" : "284", "coord" : [ -73.9829239, 40.6580753 ], "street" : "Prospect Park West", "zipcode" : "11215" }, "borough" : "Brooklyn", "cuisine" : "American ", "grades" : [ { "date" : ISODate("2014-11-19T00:00:00Z"), "grade" : "A", "score" : 11 }, { "date" : ISODate("2013-11-14T00:00:00Z"), "grade" : "A", "score" : 2 }, { "date" : ISODate("2012-12-05T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2012-05-17T00:00:00Z"), "grade" : "A", "score" : 11 } ], "name" : "The Movable Feast", "restaurant_id" : "40361606" }
Type "it" for more

Q 2)Write a MongoDB query to display the fields restaurant_id, name, borough and cuisine for all the documents in the collection restaurant.

> db.addresses.aggregate([{$group:{_id:{restaurant_id:"$restaurant_id",name:"$name",borough:"$borough",cuisine:"$cuisine"}}}])
{ "_id" : { "restaurant_id" : "40541030", "name" : "Basta Pasta Restaurant", "borough" : "Manhattan", "cuisine" : "Italian" } }
{ "_id" : { "restaurant_id" : "40857661", "name" : "The Eagle", "borough" : "Manhattan", "cuisine" : "American " } }
{ "_id" : { "restaurant_id" : "40625816", "name" : "The Fitz", "borough" : "Manhattan", "cuisine" : "American " } }
{ "_id" : { "restaurant_id" : "40395239", "name" : "Cafe Cardini", "borough" : "Queens", "cuisine" : "Italian" } }
{ "_id" : { "restaurant_id" : "40385587", "name" : "Island", "borough" : "Manhattan", "cuisine" : "Seafood" } }
{ "_id" : { "restaurant_id" : "40759586", "name" : "Cafe Buon Gusto", "borough" : "Manhattan", "cuisine" : "Italian" } }
{ "_id" : { "restaurant_id" : "40373937", "name" : "Shun Lee", "borough" : "Manhattan", "cuisine" : "Chinese" } }
{ "_id" : { "restaurant_id" : "40758684", "name" : "Juicy Lucy'S", "borough" : "Manhattan", "cuisine" : "Juice, Smoothies, Fruit Salads" } }
{ "_id" : { "restaurant_id" : "40371614", "name" : "La Baraka Restaurant", "borough" : "Queens", "cuisine" : "French" } }
{ "_id" : { "restaurant_id" : "40389900", "name" : "Classic Coffee Shop", "borough" : "Manhattan", "cuisine" : "Café/Coffee/Tea" } }
{ "_id" : { "restaurant_id" : "40624409", "name" : "Famous Fish Market", "borough" : "Manhattan", "cuisine" : "Seafood" } }
{ "_id" : { "restaurant_id" : "40587400", "name" : "Pelham Bake Shop", "borough" : "Bronx", "cuisine" : "Bakery" } }
{ "_id" : { "restaurant_id" : "40781412", "name" : "Gaudio'S Pizzeria", "borough" : "Queens", "cuisine" : "Pizza/Italian" } }
{ "_id" : { "restaurant_id" : "40374395", "name" : "El Caribe", "borough" : "Brooklyn", "cuisine" : "Italian" } }
{ "_id" : { "restaurant_id" : "40400531", "name" : "Smiler'S", "borough" : "Manhattan", "cuisine" : "American " } }
{ "_id" : { "restaurant_id" : "40850857", "name" : "Starbucks Coffee (Store #7696)", "borough" : "Manhattan", "cuisine" : "Café/Coffee/Tea" } }
{ "_id" : { "restaurant_id" : "40483597", "name" : "Richard Rogers Theatre", "borough" : "Manhattan", "cuisine" : "American " } }
{ "_id" : { "restaurant_id" : "40521003", "name" : "Topaze Restaurant & Jerk Chicken", "borough" : "Brooklyn", "cuisine" : "Caribbean" } }
{ "_id" : { "restaurant_id" : "40597074", "name" : "Caffe' Romeo", "borough" : "Brooklyn", "cuisine" : "Café/Coffee/Tea" } }
{ "_id" : { "restaurant_id" : "40394059", "name" : "Sandy'S Deli & Roti", "borough" : "Queens", "cuisine" : "Caribbean" } }
Type "it" for more

Q 3)Write a MongoDB query to display the fields restaurant_id, name, borough and zip code, but exclude the field _id for all the documents in the collection restaurant

> db.addresses.aggregate([{$project:{_id:0,restaurant_id:"$restaurant_id",name:"$name",borough:"$borough",cuisine:"$cuisine"}}])
{ "restaurant_id" : "30075445", "name" : "Morris Park Bake Shop", "borough" : "Bronx", "cuisine" : "Bakery" }
{ "restaurant_id" : "30112340", "name" : "Wendy'S", "borough" : "Brooklyn", "cuisine" : "Hamburgers" }
{ "restaurant_id" : "30191841", "name" : "Dj Reynolds Pub And Restaurant", "borough" : "Manhattan", "cuisine" : "Irish" }
{ "restaurant_id" : "40356018", "name" : "Riviera Caterer", "borough" : "Brooklyn", "cuisine" : "American " }
{ "restaurant_id" : "40356068", "name" : "Tov Kosher Kitchen", "borough" : "Queens", "cuisine" : "Jewish/Kosher" }
{ "restaurant_id" : "40356151", "name" : "Brunos On The Boulevard", "borough" : "Queens", "cuisine" : "American " }
{ "restaurant_id" : "40356442", "name" : "Kosher Island", "borough" : "Staten Island", "cuisine" : "Jewish/Kosher" }
{ "restaurant_id" : "40356483", "name" : "Wilken'S Fine Food", "borough" : "Brooklyn", "cuisine" : "Delicatessen" }
{ "restaurant_id" : "40356649", "name" : "Regina Caterers", "borough" : "Brooklyn", "cuisine" : "American " }
{ "restaurant_id" : "40356731", "name" : "Taste The Tropics Ice Cream", "borough" : "Brooklyn", "cuisine" : "Ice Cream, Gelato, Yogurt, Ices" }
{ "restaurant_id" : "40357217", "name" : "Wild Asia", "borough" : "Bronx", "cuisine" : "American " }
{ "restaurant_id" : "40357437", "name" : "C & C Catering Service", "borough" : "Brooklyn", "cuisine" : "American " }
{ "restaurant_id" : "40358429", "name" : "May May Kitchen", "borough" : "Brooklyn", "cuisine" : "Chinese" }
{ "restaurant_id" : "40359480", "name" : "1 East 66Th Street Kitchen", "borough" : "Manhattan", "cuisine" : "American " }
{ "restaurant_id" : "40360045", "name" : "Seuda Foods", "borough" : "Brooklyn", "cuisine" : "Jewish/Kosher" }
{ "restaurant_id" : "40360076", "name" : "Carvel Ice Cream", "borough" : "Brooklyn", "cuisine" : "Ice Cream, Gelato, Yogurt, Ices" }
{ "restaurant_id" : "40361322", "name" : "Carvel Ice Cream", "borough" : "Queens", "cuisine" : "Ice Cream, Gelato, Yogurt, Ices" }
{ "restaurant_id" : "40361390", "name" : "Nordic Delicacies", "borough" : "Brooklyn", "cuisine" : "Delicatessen" }
{ "restaurant_id" : "40361521", "name" : "Glorious Food", "borough" : "Manhattan", "cuisine" : "American " }
{ "restaurant_id" : "40361606", "name" : "The Movable Feast", "borough" : "Brooklyn", "cuisine" : "American " }
Type "it" for more

Q 4)Write a MongoDB query to display the fields restaurant_id, name, borough and zip code, but exclude the field _id for all the documents in the collection restaurant

> db.addresses.aggregate([{$project:{_id:0,restaurant_id:"$restaurant_id",borough:"$borough",zipcode:"$zipcode"}}])
{ "restaurant_id" : "30075445", "borough" : "Bronx" }
{ "restaurant_id" : "30112340", "borough" : "Brooklyn" }
{ "restaurant_id" : "30191841", "borough" : "Manhattan" }
{ "restaurant_id" : "40356018", "borough" : "Brooklyn" }
{ "restaurant_id" : "40356068", "borough" : "Queens" }
{ "restaurant_id" : "40356151", "borough" : "Queens" }
{ "restaurant_id" : "40356442", "borough" : "Staten Island" }
{ "restaurant_id" : "40356483", "borough" : "Brooklyn" }
{ "restaurant_id" : "40356649", "borough" : "Brooklyn" }
{ "restaurant_id" : "40356731", "borough" : "Brooklyn" }
{ "restaurant_id" : "40357217", "borough" : "Bronx" }
{ "restaurant_id" : "40357437", "borough" : "Brooklyn" }
{ "restaurant_id" : "40358429", "borough" : "Brooklyn" }
{ "restaurant_id" : "40359480", "borough" : "Manhattan" }
{ "restaurant_id" : "40360045", "borough" : "Brooklyn" }
{ "restaurant_id" : "40360076", "borough" : "Brooklyn" }
{ "restaurant_id" : "40361322", "borough" : "Queens" }
{ "restaurant_id" : "40361390", "borough" : "Brooklyn" }
{ "restaurant_id" : "40361521", "borough" : "Manhattan" }
{ "restaurant_id" : "40361606", "borough" : "Brooklyn" }
Type "it" for more

Q 5)Write a MongoDB query to display the first 5 restaurant which is in the borough Bronx.

> db.addresses.find({borough:"Bronx"}).limit(5)
{ "_id" : ObjectId("60771a0ac4a88d16ac71710e"), "address" : { "building" : "1007", "coord" : [ -73.856077, 40.848447 ], "street" : "Morris Park Ave", "zipcode" : "10462" }, "borough" : "Bronx", "cuisine" : "Bakery", "grades" : [ { "date" : ISODate("2014-03-03T00:00:00Z"), "grade" : "A", "score" : 2 }, { "date" : ISODate("2013-09-11T00:00:00Z"), "grade" : "A", "score" : 6 }, { "date" : ISODate("2013-01-24T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2011-11-23T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2011-03-10T00:00:00Z"), "grade" : "B", "score" : 14 } ], "name" : "Morris Park Bake Shop", "restaurant_id" : "30075445" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717118"), "address" : { "building" : "2300", "coord" : [ -73.8786113, 40.8502883 ], "street" : "Southern Boulevard", "zipcode" : "10460" }, "borough" : "Bronx", "cuisine" : "American ", "grades" : [ { "date" : ISODate("2014-05-28T00:00:00Z"), "grade" : "A", "score" : 11 }, { "date" : ISODate("2013-06-19T00:00:00Z"), "grade" : "A", "score" : 4 }, { "date" : ISODate("2012-06-15T00:00:00Z"), "grade" : "A", "score" : 3 } ], "name" : "Wild Asia", "restaurant_id" : "40357217" }
{ "_id" : ObjectId("60771a0ac4a88d16ac71712d"), "address" : { "building" : "1006", "coord" : [ -73.84856870000002, 40.8903781 ], "street" : "East 233 Street", "zipcode" : "10466" }, "borough" : "Bronx", "cuisine" : "Ice Cream, Gelato, Yogurt, Ices", "grades" : [ { "date" : ISODate("2014-04-24T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2013-09-05T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2013-02-21T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2012-07-03T00:00:00Z"), "grade" : "A", "score" : 11 }, { "date" : ISODate("2011-07-11T00:00:00Z"), "grade" : "A", "score" : 5 } ], "name" : "Carvel Ice Cream", "restaurant_id" : "40363093" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717131"), "address" : { "building" : "1236", "coord" : [ -73.8893654, 40.81376179999999 ], "street" : "238 Spofford Ave", "zipcode" : "10474" }, "borough" : "Bronx", "cuisine" : "Chinese", "grades" : [ { "date" : ISODate("2013-12-30T00:00:00Z"), "grade" : "A", "score" : 8 }, { "date" : ISODate("2013-01-08T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2012-06-12T00:00:00Z"), "grade" : "B", "score" : 15 } ], "name" : "Happy Garden", "restaurant_id" : "40363289" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717143"), "address" : { "building" : "277", "coord" : [ -73.8941893, 40.8634684 ], "street" : "East Kingsbridge Road", "zipcode" : "10458" }, "borough" : "Bronx", "cuisine" : "Chinese", "grades" : [ { "date" : ISODate("2014-03-03T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2013-09-26T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2013-03-19T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2012-08-29T00:00:00Z"), "grade" : "A", "score" : 11 }, { "date" : ISODate("2011-08-17T00:00:00Z"), "grade" : "A", "score" : 13 } ], "name" : "Happy Garden", "restaurant_id" : "40364296" }
>

Q 6)Write a MongoDB query to display all the restaurant which is in the borough Bronx

> db.addresses.find({borough:"Bronx"})
{ "_id" : ObjectId("60771a0ac4a88d16ac71710e"), "address" : { "building" : "1007", "coord" : [ -73.856077, 40.848447 ], "street" : "Morris Park Ave", "zipcode" : "10462" }, "borough" : "Bronx", "cuisine" : "Bakery", "grades" : [ { "date" : ISODate("2014-03-03T00:00:00Z"), "grade" : "A", "score" : 2 }, { "date" : ISODate("2013-09-11T00:00:00Z"), "grade" : "A", "score" : 6 }, { "date" : ISODate("2013-01-24T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2011-11-23T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2011-03-10T00:00:00Z"), "grade" : "B", "score" : 14 } ], "name" : "Morris Park Bake Shop", "restaurant_id" : "30075445" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717118"), "address" : { "building" : "2300", "coord" : [ -73.8786113, 40.8502883 ], "street" : "Southern Boulevard", "zipcode" : "10460" }, "borough" : "Bronx", "cuisine" : "American ", "grades" : [ { "date" : ISODate("2014-05-28T00:00:00Z"), "grade" : "A", "score" : 11 }, { "date" : ISODate("2013-06-19T00:00:00Z"), "grade" : "A", "score" : 4 }, { "date" : ISODate("2012-06-15T00:00:00Z"), "grade" : "A", "score" : 3 } ], "name" : "Wild Asia", "restaurant_id" : "40357217" }
{ "_id" : ObjectId("60771a0ac4a88d16ac71712d"), "address" : { "building" : "1006", "coord" : [ -73.84856870000002, 40.8903781 ], "street" : "East 233 Street", "zipcode" : "10466" }, "borough" : "Bronx", "cuisine" : "Ice Cream, Gelato, Yogurt, Ices", "grades" : [ { "date" : ISODate("2014-04-24T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2013-09-05T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2013-02-21T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2012-07-03T00:00:00Z"), "grade" : "A", "score" : 11 }, { "date" : ISODate("2011-07-11T00:00:00Z"), "grade" : "A", "score" : 5 } ], "name" : "Carvel Ice Cream", "restaurant_id" : "40363093" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717131"), "address" : { "building" : "1236", "coord" : [ -73.8893654, 40.81376179999999 ], "street" : "238 Spofford Ave", "zipcode" : "10474" }, "borough" : "Bronx", "cuisine" : "Chinese", "grades" : [ { "date" : ISODate("2013-12-30T00:00:00Z"), "grade" : "A", "score" : 8 }, { "date" : ISODate("2013-01-08T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2012-06-12T00:00:00Z"), "grade" : "B", "score" : 15 } ], "name" : "Happy Garden", "restaurant_id" : "40363289" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717143"), "address" : { "building" : "277", "coord" : [ -73.8941893, 40.8634684 ], "street" : "East Kingsbridge Road", "zipcode" : "10458" }, "borough" : "Bronx", "cuisine" : "Chinese", "grades" : [ { "date" : ISODate("2014-03-03T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2013-09-26T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2013-03-19T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2012-08-29T00:00:00Z"), "grade" : "A", "score" : 11 }, { "date" : ISODate("2011-08-17T00:00:00Z"), "grade" : "A", "score" : 13 } ], "name" : "Happy Garden", "restaurant_id" : "40364296" }
{ "_id" : ObjectId("60771a0ac4a88d16ac71714b"), "address" : { "building" : "658", "coord" : [ -73.81363999999999, 40.82941100000001 ], "street" : "Clarence Ave", "zipcode" : "10465" }, "borough" : "Bronx", "cuisine" : "American ", "grades" : [ { "date" : ISODate("2014-06-21T00:00:00Z"), "grade" : "A", "score" : 5 }, { "date" : ISODate("2012-07-11T00:00:00Z"), "grade" : "A", "score" : 10 } ], "name" : "Manhem Club", "restaurant_id" : "40364363" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717163"), "address" : { "building" : "2222", "coord" : [ -73.84971759999999, 40.8304811 ], "street" : "Haviland Avenue", "zipcode" : "10462" }, "borough" : "Bronx", "cuisine" : "American ", "grades" : [ { "date" : ISODate("2014-12-18T00:00:00Z"), "grade" : "A", "score" : 7 }, { "date" : ISODate("2014-05-01T00:00:00Z"), "grade" : "B", "score" : 17 }, { "date" : ISODate("2013-03-14T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2012-09-20T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2012-02-08T00:00:00Z"), "grade" : "B", "score" : 19 } ], "name" : "The New Starling Athletic Club Of The Bronx", "restaurant_id" : "40364956" }
{ "_id" : ObjectId("60771a0ac4a88d16ac71717b"), "address" : { "building" : "72", "coord" : [ -73.92506, 40.8275556 ], "street" : "East  161 Street", "zipcode" : "10451" }, "borough" : "Bronx", "cuisine" : "American ", "grades" : [ { "date" : ISODate("2014-04-15T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2013-11-14T00:00:00Z"), "grade" : "A", "score" : 4 }, { "date" : ISODate("2013-07-29T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2012-12-31T00:00:00Z"), "grade" : "B", "score" : 15 }, { "date" : ISODate("2012-05-30T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2012-01-09T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2011-08-15T00:00:00Z"), "grade" : "C", "score" : 37 } ], "name" : "Yankee Tavern", "restaurant_id" : "40365499" }
{ "_id" : ObjectId("60771a0ac4a88d16ac71718e"), "address" : { "building" : "331", "coord" : [ -73.87786539999999, 40.8724377 ], "street" : "East  204 Street", "zipcode" : "10467" }, "borough" : "Bronx", "cuisine" : "Irish", "grades" : [ { "date" : ISODate("2014-08-26T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2014-03-26T00:00:00Z"), "grade" : "B", "score" : 23 }, { "date" : ISODate("2013-09-11T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2012-12-18T00:00:00Z"), "grade" : "B", "score" : 27 }, { "date" : ISODate("2011-10-20T00:00:00Z"), "grade" : "A", "score" : 13 } ], "name" : "Mcdwyers Pub", "restaurant_id" : "40365893" }
{ "_id" : ObjectId("60771a0ac4a88d16ac7171a7"), "address" : { "building" : "5820", "coord" : [ -73.9002615, 40.885186 ], "street" : "Broadway", "zipcode" : "10463" }, "borough" : "Bronx", "cuisine" : "American ", "grades" : [ { "date" : ISODate("2014-02-26T00:00:00Z"), "grade" : "A", "score" : 5 }, { "date" : ISODate("2013-10-09T00:00:00Z"), "grade" : "B", "score" : 19 }, { "date" : ISODate("2013-05-15T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2012-11-20T00:00:00Z"), "grade" : "B", "score" : 18 }, { "date" : ISODate("2011-10-17T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2011-06-22T00:00:00Z"), "grade" : "C", "score" : 35 } ], "name" : "The Punch Bowl", "restaurant_id" : "40366497" }
{ "_id" : ObjectId("60771a0ac4a88d16ac7171b2"), "address" : { "building" : "21", "coord" : [ -73.9168424, 40.8401362 ], "street" : "East  170 Street", "zipcode" : "10452" }, "borough" : "Bronx", "cuisine" : "American ", "grades" : [ { "date" : ISODate("2014-12-16T00:00:00Z"), "grade" : "B", "score" : 22 }, { "date" : ISODate("2014-08-12T00:00:00Z"), "grade" : "A", "score" : 7 }, { "date" : ISODate("2014-03-03T00:00:00Z"), "grade" : "B", "score" : 22 }, { "date" : ISODate("2013-08-29T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2012-08-29T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2012-02-13T00:00:00Z"), "grade" : "B", "score" : 16 } ], "name" : "Munchtime", "restaurant_id" : "40366748" }
{ "_id" : ObjectId("60771a0ac4a88d16ac7171b4"), "address" : { "building" : "4340", "coord" : [ -73.8194559, 40.8899176 ], "street" : "Boston Road", "zipcode" : "10475" }, "borough" : "Bronx", "cuisine" : "Pancakes/Waffles", "grades" : [ { "date" : ISODate("2014-09-22T00:00:00Z"), "grade" : "A", "score" : 11 }, { "date" : ISODate("2014-05-16T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2013-10-30T00:00:00Z"), "grade" : "A", "score" : 3 }, { "date" : ISODate("2013-06-05T00:00:00Z"), "grade" : "B", "score" : 24 }, { "date" : ISODate("2012-05-14T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2012-01-04T00:00:00Z"), "grade" : "A", "score" : 7 } ], "name" : "Ihop", "restaurant_id" : "40366833" }
{ "_id" : ObjectId("60771a0ac4a88d16ac7171b9"), "address" : { "building" : "1191", "coord" : [ -73.8513114, 40.8316981 ], "street" : "Castle Hill Avenue", "zipcode" : "10462" }, "borough" : "Bronx", "cuisine" : "Café/Coffee/Tea", "grades" : [ { "date" : ISODate("2014-07-03T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2013-07-08T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2013-02-11T00:00:00Z"), "grade" : "A", "score" : 11 }, { "date" : ISODate("2012-08-14T00:00:00Z"), "grade" : "B", "score" : 14 }, { "date" : ISODate("2011-08-23T00:00:00Z"), "grade" : "A", "score" : 12 } ], "name" : "Lulu'S Coffee Shop", "restaurant_id" : "40366938" }
{ "_id" : ObjectId("60771a0ac4a88d16ac7171bf"), "address" : { "building" : "2894", "coord" : [ -73.815175, 40.8137649 ], "street" : "Schurz Ave", "zipcode" : "10465" }, "borough" : "Bronx", "cuisine" : "American ", "grades" : [ { "date" : ISODate("2014-10-31T00:00:00Z"), "grade" : "B", "score" : 18 }, { "date" : ISODate("2014-02-20T00:00:00Z"), "grade" : "A", "score" : 4 }, { "date" : ISODate("2013-06-07T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2012-05-17T00:00:00Z"), "grade" : "A", "score" : 2 } ], "name" : "Marina Delray", "restaurant_id" : "40367161" }
{ "_id" : ObjectId("60771a0ac4a88d16ac7171e4"), "address" : { "building" : "4280", "coord" : [ -73.86697, 40.89794699999999 ], "street" : "Katonah Ave", "zipcode" : "10470" }, "borough" : "Bronx", "cuisine" : "Not Listed/Not Applicable", "grades" : [ { "date" : ISODate("2014-06-04T00:00:00Z"), "grade" : "A", "score" : 5 }, { "date" : ISODate("2013-06-07T00:00:00Z"), "grade" : "A", "score" : 2 }, { "date" : ISODate("2012-06-27T00:00:00Z"), "grade" : "A", "score" : 2 }, { "date" : ISODate("2011-07-13T00:00:00Z"), "grade" : "A", "score" : 10 } ], "name" : "The Lark'S Nest", "restaurant_id" : "40367946" }
{ "_id" : ObjectId("60771a0ac4a88d16ac7171e5"), "address" : { "building" : "2300", "coord" : [ -73.8786113, 40.8502883 ], "street" : "Southern Boulevard", "zipcode" : "10460" }, "borough" : "Bronx", "cuisine" : "Café/Coffee/Tea", "grades" : [ { "date" : ISODate("2014-05-21T00:00:00Z"), "grade" : "A", "score" : 8 }, { "date" : ISODate("2013-05-29T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2012-06-18T00:00:00Z"), "grade" : "A", "score" : 8 } ], "name" : "Terrace Cafe", "restaurant_id" : "40368018" }
{ "_id" : ObjectId("60771a0ac4a88d16ac7171e6"), "address" : { "building" : "2300", "coord" : [ -73.8786113, 40.8502883 ], "street" : "Southern Boulevard", "zipcode" : "10460" }, "borough" : "Bronx", "cuisine" : "African", "grades" : [ { "date" : ISODate("2014-05-21T00:00:00Z"), "grade" : "A", "score" : 8 }, { "date" : ISODate("2013-06-01T00:00:00Z"), "grade" : "A", "score" : 6 }, { "date" : ISODate("2012-06-12T00:00:00Z"), "grade" : "A", "score" : 0 }, { "date" : ISODate("2011-06-08T00:00:00Z"), "grade" : "A", "score" : 0 } ], "name" : "African Terrace", "restaurant_id" : "40368021" }
{ "_id" : ObjectId("60771a0ac4a88d16ac7171e7"), "address" : { "building" : "2300", "coord" : [ -73.8786113, 40.8502883 ], "street" : "Southern Boulevard", "zipcode" : "10460" }, "borough" : "Bronx", "cuisine" : "American ", "grades" : [ { "date" : ISODate("2014-05-21T00:00:00Z"), "grade" : "A", "score" : 2 }, { "date" : ISODate("2013-05-22T00:00:00Z"), "grade" : "A", "score" : 11 }, { "date" : ISODate("2012-05-17T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2011-06-08T00:00:00Z"), "grade" : "A", "score" : 5 } ], "name" : "Cool Zone", "restaurant_id" : "40368022" }
{ "_id" : ObjectId("60771a0ac4a88d16ac7171e8"), "address" : { "building" : "2300", "coord" : [ -73.8786113, 40.8502883 ], "street" : "Southern Boulevard", "zipcode" : "10460" }, "borough" : "Bronx", "cuisine" : "American ", "grades" : [ { "date" : ISODate("2014-05-21T00:00:00Z"), "grade" : "A", "score" : 11 }, { "date" : ISODate("2013-05-29T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2012-06-15T00:00:00Z"), "grade" : "A", "score" : 2 }, { "date" : ISODate("2011-06-08T00:00:00Z"), "grade" : "A", "score" : 0 } ], "name" : "Beaver Pond", "restaurant_id" : "40368025" }
{ "_id" : ObjectId("60771a0ac4a88d16ac7171e9"), "address" : { "building" : "2300", "coord" : [ -73.8786113, 40.8502883 ], "street" : "Southern Boulevard", "zipcode" : "10460" }, "borough" : "Bronx", "cuisine" : "American ", "grades" : [ { "date" : ISODate("2014-05-21T00:00:00Z"), "grade" : "A", "score" : 5 }, { "date" : ISODate("2013-05-28T00:00:00Z"), "grade" : "A", "score" : 3 }, { "date" : ISODate("2012-06-18T00:00:00Z"), "grade" : "A", "score" : 4 }, { "date" : ISODate("2011-06-07T00:00:00Z"), "grade" : "A", "score" : 9 } ], "name" : "African Market (Baboon Cafe)", "restaurant_id" : "40368026" }
Type "it" for more

Q 7)Write a MongoDB query to display the next 5 restaurants after skipping first 5 which are in the borough Bronx.

> db.addresses.find({borough:"Bronx"}).limit(5).skip(5)
{ "_id" : ObjectId("60771a0ac4a88d16ac71714b"), "address" : { "building" : "658", "coord" : [ -73.81363999999999, 40.82941100000001 ], "street" : "Clarence Ave", "zipcode" : "10465" }, "borough" : "Bronx", "cuisine" : "American ", "grades" : [ { "date" : ISODate("2014-06-21T00:00:00Z"), "grade" : "A", "score" : 5 }, { "date" : ISODate("2012-07-11T00:00:00Z"), "grade" : "A", "score" : 10 } ], "name" : "Manhem Club", "restaurant_id" : "40364363" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717163"), "address" : { "building" : "2222", "coord" : [ -73.84971759999999, 40.8304811 ], "street" : "Haviland Avenue", "zipcode" : "10462" }, "borough" : "Bronx", "cuisine" : "American ", "grades" : [ { "date" : ISODate("2014-12-18T00:00:00Z"), "grade" : "A", "score" : 7 }, { "date" : ISODate("2014-05-01T00:00:00Z"), "grade" : "B", "score" : 17 }, { "date" : ISODate("2013-03-14T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2012-09-20T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2012-02-08T00:00:00Z"), "grade" : "B", "score" : 19 } ], "name" : "The New Starling Athletic Club Of The Bronx", "restaurant_id" : "40364956" }
{ "_id" : ObjectId("60771a0ac4a88d16ac71717b"), "address" : { "building" : "72", "coord" : [ -73.92506, 40.8275556 ], "street" : "East  161 Street", "zipcode" : "10451" }, "borough" : "Bronx", "cuisine" : "American ", "grades" : [ { "date" : ISODate("2014-04-15T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2013-11-14T00:00:00Z"), "grade" : "A", "score" : 4 }, { "date" : ISODate("2013-07-29T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2012-12-31T00:00:00Z"), "grade" : "B", "score" : 15 }, { "date" : ISODate("2012-05-30T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2012-01-09T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2011-08-15T00:00:00Z"), "grade" : "C", "score" : 37 } ], "name" : "Yankee Tavern", "restaurant_id" : "40365499" }
{ "_id" : ObjectId("60771a0ac4a88d16ac71718e"), "address" : { "building" : "331", "coord" : [ -73.87786539999999, 40.8724377 ], "street" : "East  204 Street", "zipcode" : "10467" }, "borough" : "Bronx", "cuisine" : "Irish", "grades" : [ { "date" : ISODate("2014-08-26T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2014-03-26T00:00:00Z"), "grade" : "B", "score" : 23 }, { "date" : ISODate("2013-09-11T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2012-12-18T00:00:00Z"), "grade" : "B", "score" : 27 }, { "date" : ISODate("2011-10-20T00:00:00Z"), "grade" : "A", "score" : 13 } ], "name" : "Mcdwyers Pub", "restaurant_id" : "40365893" }
{ "_id" : ObjectId("60771a0ac4a88d16ac7171a7"), "address" : { "building" : "5820", "coord" : [ -73.9002615, 40.885186 ], "street" : "Broadway", "zipcode" : "10463" }, "borough" : "Bronx", "cuisine" : "American ", "grades" : [ { "date" : ISODate("2014-02-26T00:00:00Z"), "grade" : "A", "score" : 5 }, { "date" : ISODate("2013-10-09T00:00:00Z"), "grade" : "B", "score" : 19 }, { "date" : ISODate("2013-05-15T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2012-11-20T00:00:00Z"), "grade" : "B", "score" : 18 }, { "date" : ISODate("2011-10-17T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2011-06-22T00:00:00Z"), "grade" : "C", "score" : 35 } ], "name" : "The Punch Bowl", "restaurant_id" : "40366497" }
>

Q 8)Write a MongoDB query to find the restaurants who achieved a score more than 90

> db.addresses.find({grades:{$elemMatch:{"score":{$gt : 90}}}})
{ "_id" : ObjectId("60771a0ac4a88d16ac71726c"), "address" : { "building" : "65", "coord" : [ -73.9782725, 40.7624022 ], "street" : "West   54 Street", "zipcode" : "10019" }, "borough" : "Manhattan", "cuisine" : "American ", "grades" : [ { "date" : ISODate("2014-08-22T00:00:00Z"), "grade" : "A", "score" : 11 }, { "date" : ISODate("2014-03-28T00:00:00Z"), "grade" : "C", "score" : 131 }, { "date" : ISODate("2013-09-25T00:00:00Z"), "grade" : "A", "score" : 11 }, { "date" : ISODate("2013-04-08T00:00:00Z"), "grade" : "B", "score" : 25 }, { "date" : ISODate("2012-10-15T00:00:00Z"), "grade" : "A", "score" : 11 }, { "date" : ISODate("2011-10-19T00:00:00Z"), "grade" : "A", "score" : 13 } ], "name" : "Murals On 54/Randolphs'S", "restaurant_id" : "40372466" }
{ "_id" : ObjectId("60771a0ac4a88d16ac71730d"), "address" : { "building" : "345", "coord" : [ -73.9864626, 40.7266739 ], "street" : "East 6 Street", "zipcode" : "10003" }, "borough" : "Manhattan", "cuisine" : "Indian", "grades" : [ { "date" : ISODate("2014-09-15T00:00:00Z"), "grade" : "A", "score" : 5 }, { "date" : ISODate("2014-01-14T00:00:00Z"), "grade" : "A", "score" : 8 }, { "date" : ISODate("2013-05-30T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2013-04-24T00:00:00Z"), "grade" : "P", "score" : 2 }, { "date" : ISODate("2012-10-01T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2012-04-06T00:00:00Z"), "grade" : "C", "score" : 92 }, { "date" : ISODate("2011-11-03T00:00:00Z"), "grade" : "C", "score" : 41 } ], "name" : "Gandhi", "restaurant_id" : "40381295" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717470"), "address" : { "building" : "130", "coord" : [ -73.984758, 40.7457939 ], "street" : "Madison Avenue", "zipcode" : "10016" }, "borough" : "Manhattan", "cuisine" : "Pizza/Italian", "grades" : [ { "date" : ISODate("2014-12-24T00:00:00Z"), "grade" : "Z", "score" : 31 }, { "date" : ISODate("2014-06-17T00:00:00Z"), "grade" : "C", "score" : 98 }, { "date" : ISODate("2013-12-12T00:00:00Z"), "grade" : "C", "score" : 32 }, { "date" : ISODate("2013-05-22T00:00:00Z"), "grade" : "B", "score" : 21 }, { "date" : ISODate("2012-05-02T00:00:00Z"), "grade" : "A", "score" : 11 } ], "name" : "Bella Napoli", "restaurant_id" : "40393488" }
>

Q 9)Write a MongoDB query to find the restaurants that achieved a score is more than 80 but less than 100

> db.addresses.find({grades:{$elemMatch:{"score":{$gt : 80,$lt:100}}}})
{ "_id" : ObjectId("60771a0ac4a88d16ac71730d"), "address" : { "building" : "345", "coord" : [ -73.9864626, 40.7266739 ], "street" : "East 6 Street", "zipcode" : "10003" }, "borough" : "Manhattan", "cuisine" : "Indian", "grades" : [ { "date" : ISODate("2014-09-15T00:00:00Z"), "grade" : "A", "score" : 5 }, { "date" : ISODate("2014-01-14T00:00:00Z"), "grade" : "A", "score" : 8 }, { "date" : ISODate("2013-05-30T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2013-04-24T00:00:00Z"), "grade" : "P", "score" : 2 }, { "date" : ISODate("2012-10-01T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2012-04-06T00:00:00Z"), "grade" : "C", "score" : 92 }, { "date" : ISODate("2011-11-03T00:00:00Z"), "grade" : "C", "score" : 41 } ], "name" : "Gandhi", "restaurant_id" : "40381295" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717470"), "address" : { "building" : "130", "coord" : [ -73.984758, 40.7457939 ], "street" : "Madison Avenue", "zipcode" : "10016" }, "borough" : "Manhattan", "cuisine" : "Pizza/Italian", "grades" : [ { "date" : ISODate("2014-12-24T00:00:00Z"), "grade" : "Z", "score" : 31 }, { "date" : ISODate("2014-06-17T00:00:00Z"), "grade" : "C", "score" : 98 }, { "date" : ISODate("2013-12-12T00:00:00Z"), "grade" : "C", "score" : 32 }, { "date" : ISODate("2013-05-22T00:00:00Z"), "grade" : "B", "score" : 21 }, { "date" : ISODate("2012-05-02T00:00:00Z"), "grade" : "A", "score" : 11 } ], "name" : "Bella Napoli", "restaurant_id" : "40393488" }
{ "_id" : ObjectId("60771a0cc4a88d16ac717cdc"), "address" : { "building" : "", "coord" : [ -74.0163793, 40.7167671 ], "street" : "Hudson River", "zipcode" : "10282" }, "borough" : "Manhattan", "cuisine" : "American ", "grades" : [ { "date" : ISODate("2014-06-27T00:00:00Z"), "grade" : "C", "score" : 89 }, { "date" : ISODate("2013-06-06T00:00:00Z"), "grade" : "A", "score" : 6 }, { "date" : ISODate("2012-06-19T00:00:00Z"), "grade" : "A", "score" : 13 } ], "name" : "West 79Th Street Boat Basin Cafe", "restaurant_id" : "40756344" }

Q 10) Write a MongoDB query to find the restaurants which locate in a latitude value less than -95.754168

> db.addresses.find({"address.coord" : {$lt : -95.754168}})
{ "_id" : ObjectId("60771a0ac4a88d16ac717756"), "address" : { "building" : "3707", "coord" : [ -101.8945214, 33.5197474 ], "street" : "82 Street", "zipcode" : "11372" }, "borough" : "Queens", "cuisine" : "American ", "grades" : [ { "date" : ISODate("2014-06-04T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2013-11-07T00:00:00Z"), "grade" : "B", "score" : 19 }, { "date" : ISODate("2013-05-17T00:00:00Z"), "grade" : "A", "score" : 11 }, { "date" : ISODate("2012-08-29T00:00:00Z"), "grade" : "A", "score" : 11 }, { "date" : ISODate("2012-04-03T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2011-11-16T00:00:00Z"), "grade" : "A", "score" : 7 } ], "name" : "Burger King", "restaurant_id" : "40534067" }
{ "_id" : ObjectId("60771a0bc4a88d16ac717ac1"), "address" : { "building" : "15259", "coord" : [ -119.6368672, 36.2504996 ], "street" : "10 Avenue", "zipcode" : "11357" }, "borough" : "Queens", "cuisine" : "Italian", "grades" : [ { "date" : ISODate("2014-09-04T00:00:00Z"), "grade" : "A", "score" : 11 }, { "date" : ISODate("2014-03-26T00:00:00Z"), "grade" : "A", "score" : 8 }, { "date" : ISODate("2013-03-04T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2012-09-27T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2012-04-20T00:00:00Z"), "grade" : "A", "score" : 7 }, { "date" : ISODate("2011-11-23T00:00:00Z"), "grade" : "C", "score" : 34 } ], "name" : "Cascarino'S", "restaurant_id" : "40668681" }
{ "_id" : ObjectId("60771a0cc4a88d16ac717f67"), "address" : { "building" : "60", "coord" : [ -111.9975205, 42.0970258 ], "street" : "West Side Highway", "zipcode" : "10006" }, "borough" : "Manhattan", "cuisine" : "Japanese", "grades" : [ { "date" : ISODate("2014-03-20T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2013-06-28T00:00:00Z"), "grade" : "A", "score" : 11 }, { "date" : ISODate("2012-07-05T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2011-07-27T00:00:00Z"), "grade" : "A", "score" : 2 } ], "name" : "Sports Center At Chelsea Piers (Sushi Bar)", "restaurant_id" : "40882356" }

Q 11)Write a MongoDB query to find the restaurants that do not prepare any cuisine of 'American' and their grade score more than 70 and lattitude less than -65.754168.

> db.addresses.find({$and:[{"cuisine" : {$ne :"American "}},{"grades.score" : {$gt : 70}},{"address.coord" : {$lt : -65.754168}}]})
{ "_id" : ObjectId("60771a0ac4a88d16ac71730d"), "address" : { "building" : "345", "coord" : [ -73.9864626, 40.7266739 ], "street" : "East 6 Street", "zipcode" : "10003" }, "borough" : "Manhattan", "cuisine" : "Indian", "grades" : [ { "date" : ISODate("2014-09-15T00:00:00Z"), "grade" : "A", "score" : 5 }, { "date" : ISODate("2014-01-14T00:00:00Z"), "grade" : "A", "score" : 8 }, { "date" : ISODate("2013-05-30T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2013-04-24T00:00:00Z"), "grade" : "P", "score" : 2 }, { "date" : ISODate("2012-10-01T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2012-04-06T00:00:00Z"), "grade" : "C", "score" : 92 }, { "date" : ISODate("2011-11-03T00:00:00Z"), "grade" : "C", "score" : 41 } ], "name" : "Gandhi", "restaurant_id" : "40381295" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717470"), "address" : { "building" : "130", "coord" : [ -73.984758, 40.7457939 ], "street" : "Madison Avenue", "zipcode" : "10016" }, "borough" : "Manhattan", "cuisine" : "Pizza/Italian", "grades" : [ { "date" : ISODate("2014-12-24T00:00:00Z"), "grade" : "Z", "score" : 31 }, { "date" : ISODate("2014-06-17T00:00:00Z"), "grade" : "C", "score" : 98 }, { "date" : ISODate("2013-12-12T00:00:00Z"), "grade" : "C", "score" : 32 }, { "date" : ISODate("2013-05-22T00:00:00Z"), "grade" : "B", "score" : 21 }, { "date" : ISODate("2012-05-02T00:00:00Z"), "grade" : "A", "score" : 11 } ], "name" : "Bella Napoli", "restaurant_id" : "40393488" }
{ "_id" : ObjectId("60771a0ac4a88d16ac71747b"), "address" : { "building" : "101", "coord" : [ -73.9243061, 40.8276297 ], "street" : "East 161 Street", "zipcode" : "10451" }, "borough" : "Bronx", "cuisine" : "Latin (Cuban, Dominican, Puerto Rican, South & Central American)", "grades" : [ { "date" : ISODate("2014-04-10T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2013-10-01T00:00:00Z"), "grade" : "A", "score" : 6 }, { "date" : ISODate("2013-04-11T00:00:00Z"), "grade" : "B", "score" : 25 }, { "date" : ISODate("2012-10-25T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2012-10-10T00:00:00Z"), "grade" : "P", "score" : 12 }, { "date" : ISODate("2012-05-25T00:00:00Z"), "grade" : "B", "score" : 14 }, { "date" : ISODate("2011-09-14T00:00:00Z"), "grade" : "B", "score" : 26 }, { "date" : ISODate("2011-04-25T00:00:00Z"), "grade" : "C", "score" : 76 } ], "name" : "El Molino Rojo Restaurant", "restaurant_id" : "40393688" }
{ "_id" : ObjectId("60771a0ac4a88d16ac7175cb"), "address" : { "building" : "289", "coord" : [ -73.94610279999999, 40.7137587 ], "street" : "Manhattan Avenue", "zipcode" : "11211" }, "borough" : "Brooklyn", "cuisine" : "Bakery", "grades" : [ { "date" : ISODate("2014-03-19T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2013-10-10T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2013-05-07T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2012-09-11T00:00:00Z"), "grade" : "B", "score" : 18 }, { "date" : ISODate("2012-04-18T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2011-09-27T00:00:00Z"), "grade" : "A", "score" : 8 }, { "date" : ISODate("2011-05-03T00:00:00Z"), "grade" : "C", "score" : 77 } ], "name" : "Fortunato Bros Cafe & Bakery", "restaurant_id" : "40400561" }
{ "_id" : ObjectId("60771a0bc4a88d16ac717bf5"), "address" : { "building" : "231", "coord" : [ -73.9772294, 40.7527262 ], "street" : "Grand Central Station", "zipcode" : "10017" }, "borough" : "Manhattan", "cuisine" : "Italian", "grades" : [ { "date" : ISODate("2015-01-07T00:00:00Z"), "grade" : "Z", "score" : 20 }, { "date" : ISODate("2014-07-03T00:00:00Z"), "grade" : "B", "score" : 14 }, { "date" : ISODate("2013-12-21T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2013-05-17T00:00:00Z"), "grade" : "C", "score" : 76 }, { "date" : ISODate("2012-04-20T00:00:00Z"), "grade" : "A", "score" : 12 } ], "name" : "Two Boots Grand Central", "restaurant_id" : "40725591" }
>

Q 12) Write a MongoDB query to find the restaurants which do not prepare any cuisine of American and achieved a score more than 70 and located in the longitude less than -65.754168. 

> db.addresses.find({"cuisine" : {$ne :"American "},"grades.score" : {$gt : 70},"address.coord" : {$lt : -65.754168}})
{ "_id" : ObjectId("60771a0ac4a88d16ac71730d"), "address" : { "building" : "345", "coord" : [ -73.9864626, 40.7266739 ], "street" : "East 6 Street", "zipcode" : "10003" }, "borough" : "Manhattan", "cuisine" : "Indian", "grades" : [ { "date" : ISODate("2014-09-15T00:00:00Z"), "grade" : "A", "score" : 5 }, { "date" : ISODate("2014-01-14T00:00:00Z"), "grade" : "A", "score" : 8 }, { "date" : ISODate("2013-05-30T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2013-04-24T00:00:00Z"), "grade" : "P", "score" : 2 }, { "date" : ISODate("2012-10-01T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2012-04-06T00:00:00Z"), "grade" : "C", "score" : 92 }, { "date" : ISODate("2011-11-03T00:00:00Z"), "grade" : "C", "score" : 41 } ], "name" : "Gandhi", "restaurant_id" : "40381295" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717470"), "address" : { "building" : "130", "coord" : [ -73.984758, 40.7457939 ], "street" : "Madison Avenue", "zipcode" : "10016" }, "borough" : "Manhattan", "cuisine" : "Pizza/Italian", "grades" : [ { "date" : ISODate("2014-12-24T00:00:00Z"), "grade" : "Z", "score" : 31 }, { "date" : ISODate("2014-06-17T00:00:00Z"), "grade" : "C", "score" : 98 }, { "date" : ISODate("2013-12-12T00:00:00Z"), "grade" : "C", "score" : 32 }, { "date" : ISODate("2013-05-22T00:00:00Z"), "grade" : "B", "score" : 21 }, { "date" : ISODate("2012-05-02T00:00:00Z"), "grade" : "A", "score" : 11 } ], "name" : "Bella Napoli", "restaurant_id" : "40393488" }
{ "_id" : ObjectId("60771a0ac4a88d16ac71747b"), "address" : { "building" : "101", "coord" : [ -73.9243061, 40.8276297 ], "street" : "East 161 Street", "zipcode" : "10451" }, "borough" : "Bronx", "cuisine" : "Latin (Cuban, Dominican, Puerto Rican, South & Central American)", "grades" : [ { "date" : ISODate("2014-04-10T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2013-10-01T00:00:00Z"), "grade" : "A", "score" : 6 }, { "date" : ISODate("2013-04-11T00:00:00Z"), "grade" : "B", "score" : 25 }, { "date" : ISODate("2012-10-25T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2012-10-10T00:00:00Z"), "grade" : "P", "score" : 12 }, { "date" : ISODate("2012-05-25T00:00:00Z"), "grade" : "B", "score" : 14 }, { "date" : ISODate("2011-09-14T00:00:00Z"), "grade" : "B", "score" : 26 }, { "date" : ISODate("2011-04-25T00:00:00Z"), "grade" : "C", "score" : 76 } ], "name" : "El Molino Rojo Restaurant", "restaurant_id" : "40393688" }
{ "_id" : ObjectId("60771a0ac4a88d16ac7175cb"), "address" : { "building" : "289", "coord" : [ -73.94610279999999, 40.7137587 ], "street" : "Manhattan Avenue", "zipcode" : "11211" }, "borough" : "Brooklyn", "cuisine" : "Bakery", "grades" : [ { "date" : ISODate("2014-03-19T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2013-10-10T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2013-05-07T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2012-09-11T00:00:00Z"), "grade" : "B", "score" : 18 }, { "date" : ISODate("2012-04-18T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2011-09-27T00:00:00Z"), "grade" : "A", "score" : 8 }, { "date" : ISODate("2011-05-03T00:00:00Z"), "grade" : "C", "score" : 77 } ], "name" : "Fortunato Bros Cafe & Bakery", "restaurant_id" : "40400561" }
{ "_id" : ObjectId("60771a0bc4a88d16ac717bf5"), "address" : { "building" : "231", "coord" : [ -73.9772294, 40.7527262 ], "street" : "Grand Central Station", "zipcode" : "10017" }, "borough" : "Manhattan", "cuisine" : "Italian", "grades" : [ { "date" : ISODate("2015-01-07T00:00:00Z"), "grade" : "Z", "score" : 20 }, { "date" : ISODate("2014-07-03T00:00:00Z"), "grade" : "B", "score" : 14 }, { "date" : ISODate("2013-12-21T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2013-05-17T00:00:00Z"), "grade" : "C", "score" : 76 }, { "date" : ISODate("2012-04-20T00:00:00Z"), "grade" : "A", "score" : 12 } ], "name" : "Two Boots Grand Central", "restaurant_id" : "40725591" }

Q 13)Write a MongoDB query to find the restaurants which do not prepare any cuisine of 'American ' and achieved a grade point 'A' not belongs to the borough Brooklyn.
The document must be displayed according to the cuisine in descending order.

> db.addresses.find({"cuisine":{$ne:"American"},"grades.grade":"A","borough":{$ne:"Brooklyn"}}).sort({"cuisine":-1})
{ "_id" : ObjectId("60771a0ac4a88d16ac71781a"), "address" : { "building" : "89", "coord" : [ -73.9995899, 40.7168015 ], "street" : "Baxter Street", "zipcode" : "10013" }, "borough" : "Manhattan", "cuisine" : "Vietnamese/Cambodian/Malaysia", "grades" : [ { "date" : ISODate("2014-08-21T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2013-08-31T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2013-04-11T00:00:00Z"), "grade" : "C", "score" : 3 }, { "date" : ISODate("2012-10-17T00:00:00Z"), "grade" : "A", "score" : 4 }, { "date" : ISODate("2012-05-15T00:00:00Z"), "grade" : "A", "score" : 10 } ], "name" : "Thai Son", "restaurant_id" : "40559606" }
{ "_id" : ObjectId("60771a0ac4a88d16ac7178d3"), "address" : { "building" : "8278", "coord" : [ -73.88143509999999, 40.7412552 ], "street" : "Broadway", "zipcode" : "11373" }, "borough" : "Queens", "cuisine" : "Vietnamese/Cambodian/Malaysia", "grades" : [ { "date" : ISODate("2014-06-12T00:00:00Z"), "grade" : "B", "score" : 21 }, { "date" : ISODate("2013-05-20T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2012-12-26T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2012-12-03T00:00:00Z"), "grade" : "P", "score" : 5 }, { "date" : ISODate("2012-05-04T00:00:00Z"), "grade" : "B", "score" : 27 } ], "name" : "Pho Bac Vietnamese Seafood Cuisine", "restaurant_id" : "40578058" }

Q 14)Write a MongoDB query to find the restaurant Id, name, borough and cuisine for those restaurants which contain 'Wil' as first three letters for its name

> db.addresses.find({"name":{$regex:"Wil"}},{restaurant_id:"$restaurand_id",borough:"$borough",cuisine:"$cuisine",name:"$name"})
{ "_id" : ObjectId("60771a0ac4a88d16ac717115"), "borough" : "Brooklyn", "cuisine" : "Delicatessen", "name" : "Wilken'S Fine Food" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717118"), "borough" : "Bronx", "cuisine" : "American ", "name" : "Wild Asia" }
{ "_id" : ObjectId("60771a0cc4a88d16ac717e8f"), "borough" : "Bronx", "cuisine" : "American ", "name" : "The Williamsbridge Tavern" }
{ "_id" : ObjectId("60771a0cc4a88d16ac717f1d"), "borough" : "Bronx", "cuisine" : "Pizza", "name" : "Wilbel Pizza" }
>

Q 15)Write a MongoDB query to find the restaurant Id, name, borough and cuisine for those restaurants which contain 'ces' as last three letters for its name.

> db.addresses.find({"name":{$regex:"ces"}},{restaurant_id:"$restaurand_id",borough:"$borough",cuisine:"$cuisine",name:"$name"})
{ "_id" : ObjectId("60771a0ac4a88d16ac7175a1"), "borough" : "Manhattan", "cuisine" : "American ", "name" : "Pieces" }
{ "_id" : ObjectId("60771a0ac4a88d16ac71765f"), "borough" : "Brooklyn", "cuisine" : "Continental", "name" : "Princess Manor" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717660"), "borough" : "Queens", "cuisine" : "American ", "name" : "S.M.R Restaurant Services" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717666"), "borough" : "Manhattan", "cuisine" : "American ", "name" : "Good Shepherd Services" }
{ "_id" : ObjectId("60771a0ac4a88d16ac71786d"), "borough" : "Manhattan", "cuisine" : "American ", "name" : "Faces & Names" }

Q 16)Write a MongoDB query to find the restaurant Id, name, borough and cuisine for those restaurants which contain 'Reg' as three letters somewhere in its name

> db.addresses.find({"name":{$regex:"Reg"}},{restaurant_id:"$restaurand_id",borough:"$borough",cuisine:"$cuisine",name:"$name"})
{ "_id" : ObjectId("60771a0ac4a88d16ac717116"), "borough" : "Brooklyn", "cuisine" : "American ", "name" : "Regina Caterers" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717213"), "borough" : "Manhattan", "cuisine" : "Café/Coffee/Tea", "name" : "Caffe Reggio" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717322"), "borough" : "Manhattan", "cuisine" : "American ", "name" : "Regency Hotel" }
{ "_id" : ObjectId("60771a0ac4a88d16ac71763f"), "borough" : "Manhattan", "cuisine" : "American ", "name" : "Regency Whist Club" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717722"), "borough" : "Queens", "cuisine" : "American ", "name" : "Rego Park Cafe" }

{ "_id" : ObjectId("60771a0cc4a88d16ac717d90"), "borough" : "Queens", "cuisine" : "Pizza", "name" : "Regina Pizza" }
{ "_id" : ObjectId("60771a0cc4a88d16ac717fa7"), "borough" : "Manhattan", "cuisine" : "American ", "name" : "Regal Entertainment Group" }
>

Q 17)Write a MongoDB query to find the restaurants which belong to the borough Bronx and prepared either American or Chinese dish.

> db.addresses.find({$or:[{"cuisine":"American"},{"cuisine":"Chinese"}]},{"borough":"$borough"})
{ "_id" : ObjectId("60771a0ac4a88d16ac71711a"), "borough" : "Brooklyn" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717129"), "borough" : "Queens" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717131"), "borough" : "Bronx" }
{ "_id" : ObjectId("60771a0ac4a88d16ac71713d"), "borough" : "Brooklyn" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717143"), "borough" : "Bronx" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717180"), "borough" : "Queens" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717191"), "borough" : "Manhattan" }
{ "_id" : ObjectId("60771a0ac4a88d16ac7171a8"), "borough" : "Queens" }
{ "_id" : ObjectId("60771a0ac4a88d16ac7171b0"), "borough" : "Manhattan" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717274"), "borough" : "Staten Island" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717288"), "borough" : "Manhattan" }
{ "_id" : ObjectId("60771a0ac4a88d16ac7172b4"), "borough" : "Manhattan" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717325"), "borough" : "Manhattan" }
{ "_id" : ObjectId("60771a0ac4a88d16ac71737a"), "borough" : "Manhattan" }
{ "_id" : ObjectId("60771a0ac4a88d16ac7173b5"), "borough" : "Manhattan" }
{ "_id" : ObjectId("60771a0ac4a88d16ac7173c1"), "borough" : "Brooklyn" }
{ "_id" : ObjectId("60771a0ac4a88d16ac7173e5"), "borough" : "Queens" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717407"), "borough" : "Brooklyn" }
{ "_id" : ObjectId("60771a0ac4a88d16ac71742c"), "borough" : "Queens" }
{ "_id" : ObjectId("60771a0ac4a88d16ac71742e"), "borough" : "Brooklyn" }
Type "it" for more

Q 18)Write a MongoDB query to find the restaurant Id, name, borough and cuisine for those restaurants which belong to the borough Staten Island or Queens or Bronxor Brooklyn

> db.addresses.find({"borough":{$in:["Staten Island","Bronx","Brooklyn"] }},{"restaurant_id":"$restaurant_id","name":"$name","borough":"$borough","cuisine":"$cuisine"})
{ "_id" : ObjectId("60771a0ac4a88d16ac71710e"), "restaurant_id" : "30075445", "name" : "Morris Park Bake Shop", "borough" : "Bronx", "cuisine" : "Bakery" }
{ "_id" : ObjectId("60771a0ac4a88d16ac71710f"), "restaurant_id" : "30112340", "name" : "Wendy'S", "borough" : "Brooklyn", "cuisine" : "Hamburgers" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717111"), "restaurant_id" : "40356018", "name" : "Riviera Caterer", "borough" : "Brooklyn", "cuisine" : "American " }
{ "_id" : ObjectId("60771a0ac4a88d16ac717114"), "restaurant_id" : "40356442", "name" : "Kosher Island", "borough" : "Staten Island", "cuisine" : "Jewish/Kosher" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717115"), "restaurant_id" : "40356483", "name" : "Wilken'S Fine Food", "borough" : "Brooklyn", "cuisine" : "Delicatessen" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717116"), "restaurant_id" : "40356649", "name" : "Regina Caterers", "borough" : "Brooklyn", "cuisine" : "American " }
{ "_id" : ObjectId("60771a0ac4a88d16ac717117"), "restaurant_id" : "40356731", "name" : "Taste The Tropics Ice Cream", "borough" : "Brooklyn", "cuisine" : "Ice Cream, Gelato, Yogurt, Ices" }

Q 19)Write a MongoDB query to find the restaurant Id, name, borough and cuisine for those restaurants which are not belonging to the borough Staten Island or Queens or Bronxor Brooklyn

> db.addresses.find({"borough":{$nin:["Staten Island","Bronx","Brooklyn"] }},{"restaurant_id":"$restaurant_id","name":"$name","borough":"$borough","cuisine":"$cuisine"})
{ "_id" : ObjectId("60771a0ac4a88d16ac717110"), "restaurant_id" : "30191841", "name" : "Dj Reynolds Pub And Restaurant", "borough" : "Manhattan", "cuisine" : "Irish" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717112"), "restaurant_id" : "40356068", "name" : "Tov Kosher Kitchen", "borough" : "Queens", "cuisine" : "Jewish/Kosher" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717113"), "restaurant_id" : "40356151", "name" : "Brunos On The Boulevard", "borough" : "Queens", "cuisine" : "American " }
{ "_id" : ObjectId("60771a0ac4a88d16ac71711b"), "restaurant_id" : "40359480", "name" : "1 East 66Th Street Kitchen", "borough" : "Manhattan", "cuisine" : "American " }
{ "_id" : ObjectId("60771a0ac4a88d16ac71711e"), "restaurant_id" : "40361322", "name" : "Carvel Ice Cream", "borough" : "Queens", "cuisine" : "Ice Cream, Gelato, Yogurt, Ices" }

Q 20)Write a MongoDB query to find the restaurant Id, name, borough and cuisine for those restaurants which achieved a score which is not more than 10

> db.addresses.find({"grades.score":{$not:{$gt:10}}},{"restaurant_id":"$restaurant_id","name":"$name","borough":"$borough","cuisine":"$cuisine"})
{ "_id" : ObjectId("60771a0ac4a88d16ac717119"), "restaurant_id" : "40357437", "name" : "C & C Catering Service", "borough" : "Brooklyn", "cuisine" : "American " }
{ "_id" : ObjectId("60771a0ac4a88d16ac71711b"), "restaurant_id" : "40359480", "name" : "1 East 66Th Street Kitchen", "borough" : "Manhattan", "cuisine" : "American " }
{ "_id" : ObjectId("60771a0ac4a88d16ac71711f"), "restaurant_id" : "40361390", "name" : "Nordic Delicacies", "borough" : "Brooklyn", "cuisine" : "Delicatessen" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717128"), "restaurant_id" : "40362344", "name" : "White Castle", "borough" : "Brooklyn", "cuisine" : "Hamburgers" }
{ "_id" : ObjectId("60771a0ac4a88d16ac71713b"), "restaurant_id" : "40363744", "name" : "Sonny'S Heros", "borough" : "Brooklyn", "cuisine" : "American " }
{ "_id" : ObjectId("60771a0ac4a88d16ac71714b"), "restaurant_id" : "40364363", "name" : "Manhem Club", "borough" : "Bronx", "cuisine" : "American " }
{ "_id" : ObjectId("60771a0ac4a88d16ac717159"), "restaurant_id" : "40364610", "name" : "Great Kills Yacht Club", "borough" : "Staten Island", "cuisine" : "American " }
{ "_id" : ObjectId("60771a0ac4a88d16ac717160"), "restaurant_id" : "40364863", "name" : "Serendipity 3", "borough" : "Manhattan", "cuisine" : "American " }
{ "_id" : ObjectId("60771a0ac4a88d16ac717164"), "restaurant_id" : "40364958", "name" : "White Horse Tavern", "borough" : "Manhattan", "cuisine" : "American " }

Q 21)Write a MongoDB query to find the restaurant Id, name, borough and cuisine for those restaurants which prepared dish except 'American' and 'Chinees' or restaurant's name begins with letter 'Wil'

> db.addresses.find({$or:[{"name":{$regex:"Wil"}},{$and:[{"cuisine":{$ne:"American"}},{"cuisine":{$ne:"Chinese"}}]}]},{"restaurant_id":"$restaurant_id","name":"$name","borough":"$borough","cuisine":"$cuisine"})
{ "_id" : ObjectId("60771a0ac4a88d16ac71710e"), "restaurant_id" : "30075445", "name" : "Morris Park Bake Shop", "borough" : "Bronx", "cuisine" : "Bakery" }
{ "_id" : ObjectId("60771a0ac4a88d16ac71710f"), "restaurant_id" : "30112340", "name" : "Wendy'S", "borough" : "Brooklyn", "cuisine" : "Hamburgers" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717110"), "restaurant_id" : "30191841", "name" : "Dj Reynolds Pub And Restaurant", "borough" : "Manhattan", "cuisine" : "Irish" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717111"), "restaurant_id" : "40356018", "name" : "Riviera Caterer", "borough" : "Brooklyn", "cuisine" : "American " }
{ "_id" : ObjectId("60771a0ac4a88d16ac717112"), "restaurant_id" : "40356068", "name" : "Tov Kosher Kitchen", "borough" : "Queens", "cuisine" : "Jewish/Kosher" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717113"), "restaurant_id" : "40356151", "name" : "Brunos On The Boulevard", "borough" : "Queens", "cuisine" : "American " }
{ "_id" : ObjectId("60771a0ac4a88d16ac717114"), "restaurant_id" : "40356442", "name" : "Kosher Island", "borough" : "Staten Island", "cuisine" : "Jewish/Kosher" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717115"), "restaurant_id" : "40356483", "name" : "Wilken'S Fine Food", "borough" : "Brooklyn", "cuisine" : "Delicatessen" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717116"), "restaurant_id" : "40356649", "name" : "Regina Caterers", "borough" : "Brooklyn", "cuisine" : "American " }
{ "_id" : ObjectId("60771a0ac4a88d16ac717117"), "restaurant_id" : "40356731", "name" : "Taste The Tropics Ice Cream", "borough" : "Brooklyn", "cuisine" : "Ice Cream, Gelato, Yogurt, Ices" }

Q 22)Write a MongoDB query to find the restaurant Id, name, and grades for those restaurants which achieved a grade of "A" and scored 11 on an ISODate "2014-08-11T00:00:00Z" among many of survey dates

> db.addresses.find({"grades.date":ISODate("2014-08-11T00:00:00Z"),"grades.grade":"A","grades.score":11},{"restaurant_id":"$restaurant_id","name":"$name","grades":"$grades"})
{ "_id" : ObjectId("60771a0ac4a88d16ac71718c"), "restaurant_id" : "40365871", "name" : "Neary'S Pub", "grades" : [ { "date" : ISODate("2014-08-11T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2013-07-22T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2013-03-14T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2012-07-02T00:00:00Z"), "grade" : "A", "score" : 11 }, { "date" : ISODate("2012-02-02T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2011-08-24T00:00:00Z"), "grade" : "A", "score" : 11 } ] }
{ "_id" : ObjectId("60771a0ac4a88d16ac717267"), "restaurant_id" : "40372417", "name" : "Don Filippo Restaurant", "grades" : [ { "date" : ISODate("2014-08-11T00:00:00Z"), "grade" : "A", "score" : 11 }, { "date" : ISODate("2013-12-10T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2013-06-10T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2012-06-08T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2012-01-25T00:00:00Z"), "grade" : "A", "score" : 8 }, { "date" : ISODate("2011-09-13T00:00:00Z"), "grade" : "A", "score" : 12 } ] }
{ "_id" : ObjectId("60771a0ac4a88d16ac71752d"), "restaurant_id" : "40397374", "name" : "Mustang Sally'S Restaurant", "grades" : [ { "date" : ISODate("2014-08-11T00:00:00Z"), "grade" : "A", "score" : 6 }, { "date" : ISODate("2013-08-29T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2013-04-25T00:00:00Z"), "grade" : "C", "score" : 2 }, { "date" : ISODate("2012-10-23T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2012-04-16T00:00:00Z"), "grade" : "A", "score" : 11 }, { "date" : ISODate("2011-11-15T00:00:00Z"), "grade" : "A", "score" : 12 } ] }
{ "_id" : ObjectId("60771a0ac4a88d16ac717739"), "restaurant_id" : "40526406", "name" : "Club Macanudo (Cigar Bar)", "grades" : [ { "date" : ISODate("2015-01-12T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2014-08-11T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2014-01-14T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2013-02-07T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2012-04-30T00:00:00Z"), "grade" : "A", "score" : 11 } ] }

Q 23)Write a MongoDB query to find the restaurant Id, name, and grades for those restaurants where the 2nd element of grades array contains a grade of "A" and score 9 on an ISODate "2014-08-11T00:00:00Z"

> db.addresses.find({"grades.1.date":ISODate("2014-08-11T00:00:00Z"),"grades.1.grade":"A","grades.1.score":9},{"restaurant_id":"$restaurant_id","name":"$name","grades":"$grades"})
{ "_id" : ObjectId("60771a0ac4a88d16ac717739"), "restaurant_id" : "40526406", "name" : "Club Macanudo (Cigar Bar)", "grades" : [ { "date" : ISODate("2015-01-12T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2014-08-11T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2014-01-14T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2013-02-07T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2012-04-30T00:00:00Z"), "grade" : "A", "score" : 11 } ] }

Q 24)Write a MongoDB query to find the restaurant Id, name, address and geographical location for those restaurants where 2nd element of coord array contains a value which is more than 42 and upto 52.

> db.addresses.find({"address.coord.1":{$gt:42,$lt:52}},{"restaurant_id":"$restaurant_id","address.coord":1})
{ "_id" : ObjectId("60771a0ac4a88d16ac7173b0"), "address" : { "coord" : [ -78.877224, 42.89546199999999 ] }, "restaurant_id" : "40387990" }
{ "_id" : ObjectId("60771a0ac4a88d16ac7173dc"), "address" : { "coord" : [ -0.7119979, 51.6514664 ] }, "restaurant_id" : "40388936" }
{ "_id" : ObjectId("60771a0ac4a88d16ac717635"), "address" : { "coord" : [ -87.86567699999999, 42.61150920000001 ] }, "restaurant_id" : "40402284" }
{ "_id" : ObjectId("60771a0ac4a88d16ac71786a"), "address" : { "coord" : [ -78.589606, 42.8912372 ] }, "restaurant_id" : "40568285" }
{ "_id" : ObjectId("60771a0cc4a88d16ac717f3c"), "address" : { "coord" : [ -84.9751215, 45.4713351 ] }, "restaurant_id" : "40876618" }
{ "_id" : ObjectId("60771a0cc4a88d16ac717f51"), "address" : { "coord" : [ -88.0778799, 42.4154769 ] }, "restaurant_id" : "40879243" }
{ "_id" : ObjectId("60771a0cc4a88d16ac717f67"), "address" : { "coord" : [ -111.9975205, 42.0970258 ] }, "restaurant_id" : "40882356" }

Q 25)Write a MongoDB query to arrange the name of the restaurants in ascending order along with all the columns.

> db.addresses.find().sort({"name":1})
{ "_id" : ObjectId("60771a0cc4a88d16ac717d9e"), "address" : { "building" : "129", "coord" : [ -73.962943, 40.685007 ], "street" : "Gates Avenue", "zipcode" : "11238" }, "borough" : "Brooklyn", "cuisine" : "Italian", "grades" : [ { "date" : ISODate("2014-03-06T00:00:00Z"), "grade" : "A", "score" : 5 }, { "date" : ISODate("2013-08-29T00:00:00Z"), "grade" : "A", "score" : 2 }, { "date" : ISODate("2013-03-08T00:00:00Z"), "grade" : "A", "score" : 7 }, { "date" : ISODate("2012-06-27T00:00:00Z"), "grade" : "A", "score" : 7 }, { "date" : ISODate("2011-11-17T00:00:00Z"), "grade" : "A", "score" : 12 } ], "name" : "(Lewis Drug Store) Locanda Vini E Olii", "restaurant_id" : "40804423" }
{ "_id" : ObjectId("60771a0ac4a88d16ac71711b"), "address" : { "building" : "1", "coord" : [ -73.96926909999999, 40.7685235 ], "street" : "East   66 Street", "zipcode" : "10065" }, "borough" : "Manhattan", "cuisine" : "American ", "grades" : [ { "date" : ISODate("2014-05-07T00:00:00Z"), "grade" : "A", "score" : 3 }, { "date" : ISODate("2013-05-03T00:00:00Z"), "grade" : "A", "score" : 4 }, { "date" : ISODate("2012-04-30T00:00:00Z"), "grade" : "A", "score" : 6 }, { "date" : ISODate("2011-12-27T00:00:00Z"), "grade" : "A", "score" : 0 } ], "name" : "1 East 66Th Street Kitchen", "restaurant_id" : "40359480" }

Q 26)Write a MongoDB query to arrange the name of the restaurants in descending along with all the columns

> db.addresses.find().sort({"name":-1})
{ "_id" : ObjectId("60771a0ac4a88d16ac7171cd"), "address" : { "building" : "6946", "coord" : [ -73.8811834, 40.7017759 ], "street" : "Myrtle Avenue", "zipcode" : "11385" }, "borough" : "Queens", "cuisine" : "German", "grades" : [ { "date" : ISODate("2014-09-24T00:00:00Z"), "grade" : "A", "score" : 11 }, { "date" : ISODate("2014-04-17T00:00:00Z"), "grade" : "A", "score" : 7 }, { "date" : ISODate("2013-03-12T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2012-10-02T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2012-05-09T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2011-12-28T00:00:00Z"), "grade" : "B", "score" : 24 } ], "name" : "Zum Stammtisch", "restaurant_id" : "40367377" }
{ "_id" : ObjectId("60771a0cc4a88d16ac717d07"), "address" : { "building" : "107109", "coord" : [ -73.9744668, 40.731155 ], "street" : "Avenue C", "zipcode" : "10009" }, "borough" : "Manhattan", "cuisine" : "German", "grades" : [ { "date" : ISODate("2014-03-04T00:00:00Z"), "grade" : "A", "score" : 7 }, { "date" : ISODate("2013-08-21T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2013-02-27T00:00:00Z"), "grade" : "A", "score" : 11 }, { "date" : ISODate("2012-06-05T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2011-12-20T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2011-07-15T00:00:00Z"), "grade" : "A", "score" : 6 } ], "name" : "Zum Schneider", "restaurant_id" : "40763382" }

Q 27)Write a MongoDB query to arranged the name of the cuisine in ascending order and for that same cuisine borough should be in descending order.

> db.addresses.find().sort({"cuisine":1,"borough":-1})
{ "_id" : ObjectId("60771a0ac4a88d16ac7177f9"), "address" : { "building" : "1345", "coord" : [ -73.959249, 40.768076 ], "street" : "2 Avenue", "zipcode" : "10021" }, "borough" : "Manhattan", "cuisine" : "Afghan", "grades" : [ { "date" : ISODate("2014-10-07T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2013-10-23T00:00:00Z"), "grade" : "A", "score" : 8 }, { "date" : ISODate("2012-10-26T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2012-04-26T00:00:00Z"), "grade" : "A", "score" : 7 }, { "date" : ISODate("2012-01-12T00:00:00Z"), "grade" : "P", "score" : 10 } ], "name" : "Afghan Kebab House", "restaurant_id" : "40552806" }
{ "_id" : ObjectId("60771a0bc4a88d16ac717924"), "address" : { "building" : "34", "coord" : [ -73.9883612, 40.7286391 ], "street" : "St Marks Place", "zipcode" : "10003" }, "borough" : "Manhattan", "cuisine" : "Afghan", "grades" : [ { "date" : ISODate("2014-02-20T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2013-08-06T00:00:00Z"), "grade" : "B", "score" : 17 }, { "date" : ISODate("2013-01-31T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2012-05-24T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2011-12-13T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2011-08-25T00:00:00Z"), "grade" : "A", "score" : 10 } ], "name" : "Khyber Pass", "restaurant_id" : "40589545" }

Q 28)Write a MongoDB query to know whether all the addresses contains the street or not.

> db.addresses.find({"address.street":{"$exists":true}})
{ "_id" : ObjectId("60771a0ac4a88d16ac71710e"), "address" : { "building" : "1007", "coord" : [ -73.856077, 40.848447 ], "street" : "Morris Park Ave", "zipcode" : "10462" }, "borough" : "Bronx", "cuisine" : "Bakery", "grades" : [ { "date" : ISODate("2014-03-03T00:00:00Z"), "grade" : "A", "score" : 2 }, { "date" : ISODate("2013-09-11T00:00:00Z"), "grade" : "A", "score" : 6 }, { "date" : ISODate("2013-01-24T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2011-11-23T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2011-03-10T00:00:00Z"), "grade" : "B", "score" : 14 } ], "name" : "Morris Park Bake Shop", "restaurant_id" : "30075445" }
{ "_id" : ObjectId("60771a0ac4a88d16ac71710f"), "address" : { "building" : "469", "coord" : [ -73.961704, 40.662942 ], "street" : "Flatbush Avenue", "zipcode" : "11225" }, "borough" : "Brooklyn", "cuisine" : "Hamburgers", "grades" : [ { "date" : ISODate("2014-12-30T00:00:00Z"), "grade" : "A", "score" : 8 }, { "date" : ISODate("2014-07-01T00:00:00Z"), "grade" : "B", "score" : 23 }, { "date" : ISODate("2013-04-30T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2012-05-08T00:00:00Z"), "grade" : "A", "score" : 12 } ], "name" : "Wendy'S", "restaurant_id" : "30112340" }

Q 29)Write a MongoDB query which will select all documents in the restaurants collection where the coord field value is double

> db.addresses.find({"address.coord":{$type:1}})
{ "_id" : ObjectId("60771a0ac4a88d16ac71710e"), "address" : { "building" : "1007", "coord" : [ -73.856077, 40.848447 ], "street" : "Morris Park Ave", "zipcode" : "10462" }, "borough" : "Bronx", "cuisine" : "Bakery", "grades" : [ { "date" : ISODate("2014-03-03T00:00:00Z"), "grade" : "A", "score" : 2 }, { "date" : ISODate("2013-09-11T00:00:00Z"), "grade" : "A", "score" : 6 }, { "date" : ISODate("2013-01-24T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2011-11-23T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2011-03-10T00:00:00Z"), "grade" : "B", "score" : 14 } ], "name" : "Morris Park Bake Shop", "restaurant_id" : "30075445" }
{ "_id" : ObjectId("60771a0ac4a88d16ac71710f"), "address" : { "building" : "469", "coord" : [ -73.961704, 40.662942 ], "street" : "Flatbush Avenue", "zipcode" : "11225" }, "borough" : "Brooklyn", "cuisine" : "Hamburgers", "grades" : [ { "date" : ISODate("2014-12-30T00:00:00Z"), "grade" : "A", "score" : 8 }, { "date" : ISODate("2014-07-01T00:00:00Z"), "grade" : "B", "score" : 23 }, { "date" : ISODate("2013-04-30T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2012-05-08T00:00:00Z"), "grade" : "A", "score" : 12 } ], "name" : "Wendy'S", "restaurant_id" : "30112340" }

Q 30)Write a MongoDB query which will select the restaurant Id, name and grades for those restaurants which returns 0 as a remainder after dividing the score by 7

> db.addresses.find({"grades.score":{$mod:[7,0]}},{"restaurant_id":"$restaurant_id","name":"$name","grades":"$grades"})
{ "_id" : ObjectId("60771a0ac4a88d16ac71710e"), "restaurant_id" : "30075445", "name" : "Morris Park Bake Shop", "grades" : [ { "date" : ISODate("2014-03-03T00:00:00Z"), "grade" : "A", "score" : 2 }, { "date" : ISODate("2013-09-11T00:00:00Z"), "grade" : "A", "score" : 6 }, { "date" : ISODate("2013-01-24T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2011-11-23T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2011-03-10T00:00:00Z"), "grade" : "B", "score" : 14 } ] }
{ "_id" : ObjectId("60771a0ac4a88d16ac717111"), "restaurant_id" : "40356018", "name" : "Riviera Caterer", "grades" : [ { "date" : ISODate("2014-06-10T00:00:00Z"), "grade" : "A", "score" : 5 }, { "date" : ISODate("2013-06-05T00:00:00Z"), "grade" : "A", "score" : 7 }, { "date" : ISODate("2012-04-13T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2011-10-12T00:00:00Z"), "grade" : "A", "score" : 12 } ] }

Q 31)Write a MongoDB query to find the restaurant name, borough, longitude and attitude and cuisine for those restaurants which contains 'mon' as three letters somewhere in its name

> db.addresses.find({"name":{$regex:"mon"}},{"name":"$name","borough":"$borough","cuisine":"$cuisine","address.coord":1})
{ "_id" : ObjectId("60771a0ac4a88d16ac7171a2"), "address" : { "coord" : [ -73.98306099999999, 40.7441419 ] }, "name" : "Desmond'S Tavern", "borough" : "Manhattan", "cuisine" : "American " }
{ "_id" : ObjectId("60771a0ac4a88d16ac7171ab"), "address" : { "coord" : [ -73.8221418, 40.7272376 ] }, "name" : "Shimons Kosher Pizza", "borough" : "Queens", "cuisine" : "Jewish/Kosher" }
{ "_id" : ObjectId("60771a0ac4a88d16ac7171b7"), "address" : { "coord" : [ -74.10465599999999, 40.58834 ] }, "name" : "Richmond County Country Club", "borough" : "Staten Island", "cuisine" : "American " }
{ "_id" : ObjectId("60771a0ac4a88d16ac7171e2"), "address" : { "coord" : [ -73.9812843, 40.5947365 ] }, "name" : "Lb Spumoni Gardens", "borough" : "Brooklyn", "cuisine" : "Pizza/Italian" }

Q 32)Write a MongoDB query to find the restaurant name, borough, longitude and attitude and cuisine for those restaurants which contain 'Mad' as first three letters of its name.

> db.addresses.find({"name":{$regex:"Mat"}},{"name":"$name","borough":"$borough","cuisine":"$cuisine","address.coord":1})
{ "_id" : ObjectId("60771a0ac4a88d16ac7174a7"), "address" : { "coord" : [ -73.732315, 40.720725 ] }, "name" : "Mateus Restaurant", "borough" : "Queens", "cuisine" : "Portuguese" }
{ "_id" : ObjectId("60771a0ac4a88d16ac7175b2"), "address" : { "coord" : [ -73.983464, 40.765451 ] }, "name" : "Matt'S Grill Restaurant", "borough" : "Manhattan", "cuisine" : "American " }
                                                                   ########################################################
